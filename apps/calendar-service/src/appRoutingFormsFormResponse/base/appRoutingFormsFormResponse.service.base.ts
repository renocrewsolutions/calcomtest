/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  AppRoutingFormsFormResponse, // @ts-ignore
  AppRoutingFormsForm,
} from "@prisma/client";

export class AppRoutingFormsFormResponseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AppRoutingFormsFormResponseCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AppRoutingFormsFormResponseCountArgs>
  ): Promise<number> {
    return this.prisma.appRoutingFormsFormResponse.count(args);
  }

  async appRoutingFormsFormResponses<
    T extends Prisma.AppRoutingFormsFormResponseFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AppRoutingFormsFormResponseFindManyArgs>
  ): Promise<AppRoutingFormsFormResponse[]> {
    return this.prisma.appRoutingFormsFormResponse.findMany(args);
  }
  async appRoutingFormsFormResponse<
    T extends Prisma.AppRoutingFormsFormResponseFindUniqueArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.AppRoutingFormsFormResponseFindUniqueArgs
    >
  ): Promise<AppRoutingFormsFormResponse | null> {
    return this.prisma.appRoutingFormsFormResponse.findUnique(args);
  }
  async createAppRoutingFormsFormResponse<
    T extends Prisma.AppRoutingFormsFormResponseCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AppRoutingFormsFormResponseCreateArgs>
  ): Promise<AppRoutingFormsFormResponse> {
    return this.prisma.appRoutingFormsFormResponse.create<T>(args);
  }
  async updateAppRoutingFormsFormResponse<
    T extends Prisma.AppRoutingFormsFormResponseUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AppRoutingFormsFormResponseUpdateArgs>
  ): Promise<AppRoutingFormsFormResponse> {
    return this.prisma.appRoutingFormsFormResponse.update<T>(args);
  }
  async deleteAppRoutingFormsFormResponse<
    T extends Prisma.AppRoutingFormsFormResponseDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AppRoutingFormsFormResponseDeleteArgs>
  ): Promise<AppRoutingFormsFormResponse> {
    return this.prisma.appRoutingFormsFormResponse.delete(args);
  }

  async getForm(parentId: number): Promise<AppRoutingFormsForm | null> {
    return this.prisma.appRoutingFormsFormResponse
      .findUnique({
        where: { id: parentId },
      })
      .form();
  }
}
