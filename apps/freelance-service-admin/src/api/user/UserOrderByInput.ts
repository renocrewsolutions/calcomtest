import { SortOrder } from "../../util/SortOrder";

export type UserOrderByInput = {
  accessCodes?: SortOrder;
  accounts?: SortOrder;
  allowDynamicBooking?: SortOrder;
  allowSEOIndexing?: SortOrder;
  apiKeys?: SortOrder;
  appTheme?: SortOrder;
  availability?: SortOrder;
  avatar?: SortOrder;
  avatarUrl?: SortOrder;
  away?: SortOrder;
  backupCodes?: SortOrder;
  bio?: SortOrder;
  bookingRedirects?: SortOrder;
  bookingRedirectsTo?: SortOrder;
  bookings?: SortOrder;
  brandColor?: SortOrder;
  bufferTime?: SortOrder;
  completedOnboarding?: SortOrder;
  createdDate?: SortOrder;
  credentials?: SortOrder;
  darkBrandColor?: SortOrder;
  defaultScheduleId?: SortOrder;
  destinationCalendarId?: SortOrder;
  disableImpersonation?: SortOrder;
  email?: SortOrder;
  emailVerified?: SortOrder;
  endTime?: SortOrder;
  feedback?: SortOrder;
  hideBranding?: SortOrder;
  hosts?: SortOrder;
  id?: SortOrder;
  identityProvider?: SortOrder;
  identityProviderId?: SortOrder;
  impersonatedBy?: SortOrder;
  impersonatedUsers?: SortOrder;
  invitedTo?: SortOrder;
  locale?: SortOrder;
  locked?: SortOrder;
  metadata?: SortOrder;
  movedToProfileId?: SortOrder;
  name?: SortOrder;
  organizationId?: SortOrder;
  ownedEventTypes?: SortOrder;
  passwordId?: SortOrder;
  profiles?: SortOrder;
  receiveMonthlyDigestEmail?: SortOrder;
  role?: SortOrder;
  routingForms?: SortOrder;
  schedules?: SortOrder;
  selectedCalendars?: SortOrder;
  sessions?: SortOrder;
  startTime?: SortOrder;
  teams?: SortOrder;
  theme?: SortOrder;
  timeFormat?: SortOrder;
  timeZone?: SortOrder;
  trialEndsAt?: SortOrder;
  twoFactorEnabled?: SortOrder;
  twoFactorSecret?: SortOrder;
  username?: SortOrder;
  verified?: SortOrder;
  verifiedNumbers?: SortOrder;
  webhooks?: SortOrder;
  weekStart?: SortOrder;
  workflows?: SortOrder;
};
