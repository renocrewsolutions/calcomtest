/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppModelWhereUniqueInput } from "../../appModel/base/AppModelWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsInt,
  IsBoolean,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { CalendarCacheUpdateManyWithoutCredentialsInput } from "./CalendarCacheUpdateManyWithoutCredentialsInput";
import { DestinationCalendarUpdateManyWithoutCredentialsInput } from "./DestinationCalendarUpdateManyWithoutCredentialsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { SelectedCalendarUpdateManyWithoutCredentialsInput } from "./SelectedCalendarUpdateManyWithoutCredentialsInput";
import { TeamWhereUniqueInput } from "../../team/base/TeamWhereUniqueInput";

@InputType()
class CredentialUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AppModelWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AppModelWhereUniqueInput)
  @IsOptional()
  @Field(() => AppModelWhereUniqueInput, {
    nullable: true,
  })
  appField?: AppModelWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  billingCycleStart?: number | null;

  @ApiProperty({
    required: false,
    type: () => CalendarCacheUpdateManyWithoutCredentialsInput,
  })
  @ValidateNested()
  @Type(() => CalendarCacheUpdateManyWithoutCredentialsInput)
  @IsOptional()
  @Field(() => CalendarCacheUpdateManyWithoutCredentialsInput, {
    nullable: true,
  })
  calendarCache?: CalendarCacheUpdateManyWithoutCredentialsInput;

  @ApiProperty({
    required: false,
    type: () => DestinationCalendarUpdateManyWithoutCredentialsInput,
  })
  @ValidateNested()
  @Type(() => DestinationCalendarUpdateManyWithoutCredentialsInput)
  @IsOptional()
  @Field(() => DestinationCalendarUpdateManyWithoutCredentialsInput, {
    nullable: true,
  })
  destinationCalendars?: DestinationCalendarUpdateManyWithoutCredentialsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  invalid?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  key?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  paymentStatus?: string | null;

  @ApiProperty({
    required: false,
    type: () => SelectedCalendarUpdateManyWithoutCredentialsInput,
  })
  @ValidateNested()
  @Type(() => SelectedCalendarUpdateManyWithoutCredentialsInput)
  @IsOptional()
  @Field(() => SelectedCalendarUpdateManyWithoutCredentialsInput, {
    nullable: true,
  })
  selectedCalendars?: SelectedCalendarUpdateManyWithoutCredentialsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  subscriptionId?: string | null;

  @ApiProperty({
    required: false,
    type: () => TeamWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TeamWhereUniqueInput)
  @IsOptional()
  @Field(() => TeamWhereUniqueInput, {
    nullable: true,
  })
  team?: TeamWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  typeField?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  userId?: number | null;
}

export { CredentialUpdateInput as CredentialUpdateInput };
