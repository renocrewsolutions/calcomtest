/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Avatar } from "@prisma/client";

export class AvatarServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AvatarCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarCountArgs>
  ): Promise<number> {
    return this.prisma.avatar.count(args);
  }

  async avatars<T extends Prisma.AvatarFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarFindManyArgs>
  ): Promise<Avatar[]> {
    return this.prisma.avatar.findMany(args);
  }
  async avatar<T extends Prisma.AvatarFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarFindUniqueArgs>
  ): Promise<Avatar | null> {
    return this.prisma.avatar.findUnique(args);
  }
  async createAvatar<T extends Prisma.AvatarCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarCreateArgs>
  ): Promise<Avatar> {
    return this.prisma.avatar.create<T>(args);
  }
  async updateAvatar<T extends Prisma.AvatarUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarUpdateArgs>
  ): Promise<Avatar> {
    return this.prisma.avatar.update<T>(args);
  }
  async deleteAvatar<T extends Prisma.AvatarDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AvatarDeleteArgs>
  ): Promise<Avatar> {
    return this.prisma.avatar.delete(args);
  }
}
