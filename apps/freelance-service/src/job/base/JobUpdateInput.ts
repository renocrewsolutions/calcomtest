/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BidUpdateManyWithoutJobsInput } from "./BidUpdateManyWithoutJobsInput";
import {
  ValidateNested,
  IsOptional,
  IsNumber,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { ReviewUpdateManyWithoutJobsInput } from "./ReviewUpdateManyWithoutJobsInput";
import { TransactionUpdateManyWithoutJobsInput } from "./TransactionUpdateManyWithoutJobsInput";

@InputType()
class JobUpdateInput {
  @ApiProperty({
    required: false,
    type: () => BidUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => BidUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => BidUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  bids?: BidUpdateManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  budget?: number;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  client?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutJobsInput;
}

export { JobUpdateInput as JobUpdateInput };
