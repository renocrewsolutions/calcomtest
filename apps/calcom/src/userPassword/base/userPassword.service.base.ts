/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserPassword } from "@prisma/client";

export class UserPasswordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.UserPasswordCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordCountArgs>
  ): Promise<number> {
    return this.prisma.userPassword.count(args);
  }

  async userPasswords<T extends Prisma.UserPasswordFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordFindManyArgs>
  ): Promise<UserPassword[]> {
    return this.prisma.userPassword.findMany(args);
  }
  async userPassword<T extends Prisma.UserPasswordFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordFindUniqueArgs>
  ): Promise<UserPassword | null> {
    return this.prisma.userPassword.findUnique(args);
  }
  async createUserPassword<T extends Prisma.UserPasswordCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordCreateArgs>
  ): Promise<UserPassword> {
    return this.prisma.userPassword.create<T>(args);
  }
  async updateUserPassword<T extends Prisma.UserPasswordUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordUpdateArgs>
  ): Promise<UserPassword> {
    return this.prisma.userPassword.update<T>(args);
  }
  async deleteUserPassword<T extends Prisma.UserPasswordDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPasswordDeleteArgs>
  ): Promise<UserPassword> {
    return this.prisma.userPassword.delete(args);
  }
}
