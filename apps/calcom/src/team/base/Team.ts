/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessCode } from "../../accessCode/base/AccessCode";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsBoolean,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { ApiKey } from "../../apiKey/base/ApiKey";
import { Credential } from "../../credential/base/Credential";
import { EventType } from "../../eventType/base/EventType";
import { InstantMeetingToken } from "../../instantMeetingToken/base/InstantMeetingToken";
import { VerificationToken } from "../../verificationToken/base/VerificationToken";
import { Membership } from "../../membership/base/Membership";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Profile } from "../../profile/base/Profile";
import { User } from "../../user/base/User";
import { AppRoutingFormsForm } from "../../appRoutingFormsForm/base/AppRoutingFormsForm";
import { VerifiedNumber } from "../../verifiedNumber/base/VerifiedNumber";
import { Webhook } from "../../webhook/base/Webhook";
import { Workflow } from "../../workflow/base/Workflow";

@ObjectType()
class Team {
  @ApiProperty({
    required: false,
    type: () => [AccessCode],
  })
  @ValidateNested()
  @Type(() => AccessCode)
  @IsOptional()
  accessCodes?: Array<AccessCode>;

  @ApiProperty({
    required: false,
    type: () => [ApiKey],
  })
  @ValidateNested()
  @Type(() => ApiKey)
  @IsOptional()
  apiKeys?: Array<ApiKey>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  appIconLogo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  appLogo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  brandColor!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  calVideoLogo!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Team],
  })
  @ValidateNested()
  @Type(() => Team)
  @IsOptional()
  children?: Array<Team>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Credential],
  })
  @ValidateNested()
  @Type(() => Credential)
  @IsOptional()
  credentials?: Array<Credential>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  darkBrandColor!: string | null;

  @ApiProperty({
    required: false,
    type: () => [EventType],
  })
  @ValidateNested()
  @Type(() => EventType)
  @IsOptional()
  eventTypes?: Array<EventType>;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  hideBookATeamMember!: boolean;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  hideBranding!: boolean;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: () => [InstantMeetingToken],
  })
  @ValidateNested()
  @Type(() => InstantMeetingToken)
  @IsOptional()
  instantMeetingTokens?: Array<InstantMeetingToken>;

  @ApiProperty({
    required: false,
    type: () => [VerificationToken],
  })
  @ValidateNested()
  @Type(() => VerificationToken)
  @IsOptional()
  inviteTokens?: Array<VerificationToken>;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isPrivate!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logoUrl!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Membership],
  })
  @ValidateNested()
  @Type(() => Membership)
  @IsOptional()
  members?: Array<Membership>;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  metadata!: JsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [Profile],
  })
  @ValidateNested()
  @Type(() => Profile)
  @IsOptional()
  orgProfiles?: Array<Profile>;

  @ApiProperty({
    required: false,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  orgUsers?: Array<User>;

  @ApiProperty({
    required: false,
    type: () => Team,
  })
  @ValidateNested()
  @Type(() => Team)
  @IsOptional()
  parent?: Team | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  pendingPayment!: boolean;

  @ApiProperty({
    required: false,
    type: () => [AppRoutingFormsForm],
  })
  @ValidateNested()
  @Type(() => AppRoutingFormsForm)
  @IsOptional()
  routingForms?: Array<AppRoutingFormsForm>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  slug!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  theme!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  timeFormat!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  timeZone!: string;

  @ApiProperty({
    required: false,
    type: () => [VerifiedNumber],
  })
  @ValidateNested()
  @Type(() => VerifiedNumber)
  @IsOptional()
  verifiedNumbers?: Array<VerifiedNumber>;

  @ApiProperty({
    required: false,
    type: () => [Webhook],
  })
  @ValidateNested()
  @Type(() => Webhook)
  @IsOptional()
  webhooks?: Array<Webhook>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  weekStart!: string;

  @ApiProperty({
    required: false,
    type: () => [Workflow],
  })
  @ValidateNested()
  @Type(() => Workflow)
  @IsOptional()
  workflows?: Array<Workflow>;
}

export { Team as Team };
