/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccessCodeUpdateManyWithoutTeamsInput } from "./AccessCodeUpdateManyWithoutTeamsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { ApiKeyUpdateManyWithoutTeamsInput } from "./ApiKeyUpdateManyWithoutTeamsInput";
import { TeamUpdateManyWithoutTeamsInput } from "./TeamUpdateManyWithoutTeamsInput";
import { CredentialUpdateManyWithoutTeamsInput } from "./CredentialUpdateManyWithoutTeamsInput";
import { EventTypeUpdateManyWithoutTeamsInput } from "./EventTypeUpdateManyWithoutTeamsInput";
import { InstantMeetingTokenUpdateManyWithoutTeamsInput } from "./InstantMeetingTokenUpdateManyWithoutTeamsInput";
import { VerificationTokenUpdateManyWithoutTeamsInput } from "./VerificationTokenUpdateManyWithoutTeamsInput";
import { MembershipUpdateManyWithoutTeamsInput } from "./MembershipUpdateManyWithoutTeamsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ProfileUpdateManyWithoutTeamsInput } from "./ProfileUpdateManyWithoutTeamsInput";
import { TeamWhereUniqueInput } from "./TeamWhereUniqueInput";
import { AppRoutingFormsFormUpdateManyWithoutTeamsInput } from "./AppRoutingFormsFormUpdateManyWithoutTeamsInput";
import { VerifiedNumberUpdateManyWithoutTeamsInput } from "./VerifiedNumberUpdateManyWithoutTeamsInput";
import { WebhookUpdateManyWithoutTeamsInput } from "./WebhookUpdateManyWithoutTeamsInput";
import { WorkflowUpdateManyWithoutTeamsInput } from "./WorkflowUpdateManyWithoutTeamsInput";

@InputType()
class TeamUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AccessCodeUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => AccessCodeUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => AccessCodeUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  accessCodes?: AccessCodeUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => ApiKeyUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => ApiKeyUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => ApiKeyUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  apiKeys?: ApiKeyUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  appIconLogo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  appLogo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  brandColor?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  calVideoLogo?: string | null;

  @ApiProperty({
    required: false,
    type: () => TeamUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => TeamUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => TeamUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  children?: TeamUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => CredentialUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => CredentialUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => CredentialUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  credentials?: CredentialUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  darkBrandColor?: string | null;

  @ApiProperty({
    required: false,
    type: () => EventTypeUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => EventTypeUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => EventTypeUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  eventTypes?: EventTypeUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hideBookATeamMember?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hideBranding?: boolean;

  @ApiProperty({
    required: false,
    type: () => InstantMeetingTokenUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => InstantMeetingTokenUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => InstantMeetingTokenUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  instantMeetingTokens?: InstantMeetingTokenUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => VerificationTokenUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => VerificationTokenUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => VerificationTokenUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  inviteTokens?: VerificationTokenUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPrivate?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logoUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => MembershipUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => MembershipUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => MembershipUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  members?: MembershipUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  metadata?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => ProfileUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => ProfileUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => ProfileUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  orgProfiles?: ProfileUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  orgUsers?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TeamWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TeamWhereUniqueInput)
  @IsOptional()
  @Field(() => TeamWhereUniqueInput, {
    nullable: true,
  })
  parent?: TeamWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  pendingPayment?: boolean;

  @ApiProperty({
    required: false,
    type: () => AppRoutingFormsFormUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => AppRoutingFormsFormUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => AppRoutingFormsFormUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  routingForms?: AppRoutingFormsFormUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  slug?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  theme?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  timeFormat?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  timeZone?: string;

  @ApiProperty({
    required: false,
    type: () => VerifiedNumberUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => VerifiedNumberUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => VerifiedNumberUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  verifiedNumbers?: VerifiedNumberUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: () => WebhookUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => WebhookUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => WebhookUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  webhooks?: WebhookUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  weekStart?: string;

  @ApiProperty({
    required: false,
    type: () => WorkflowUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => WorkflowUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => WorkflowUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  workflows?: WorkflowUpdateManyWithoutTeamsInput;
}

export { TeamUpdateInput as TeamUpdateInput };
