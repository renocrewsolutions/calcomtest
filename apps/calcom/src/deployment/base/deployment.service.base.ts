/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Deployment } from "@prisma/client";

export class DeploymentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.DeploymentCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentCountArgs>
  ): Promise<number> {
    return this.prisma.deployment.count(args);
  }

  async deployments<T extends Prisma.DeploymentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentFindManyArgs>
  ): Promise<Deployment[]> {
    return this.prisma.deployment.findMany(args);
  }
  async deployment<T extends Prisma.DeploymentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentFindUniqueArgs>
  ): Promise<Deployment | null> {
    return this.prisma.deployment.findUnique(args);
  }
  async createDeployment<T extends Prisma.DeploymentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentCreateArgs>
  ): Promise<Deployment> {
    return this.prisma.deployment.create<T>(args);
  }
  async updateDeployment<T extends Prisma.DeploymentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentUpdateArgs>
  ): Promise<Deployment> {
    return this.prisma.deployment.update<T>(args);
  }
  async deleteDeployment<T extends Prisma.DeploymentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DeploymentDeleteArgs>
  ): Promise<Deployment> {
    return this.prisma.deployment.delete(args);
  }
}
